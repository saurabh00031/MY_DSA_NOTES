
/////////////////////////////////////////////////////////////////////////////////////////////////////////////


                                         //Using Statespace tree//

//back-tracking is done using recursion:-

/////////////////////////////////////////////////////////////////////////////////////////////////////////////


//permutations with repetation:-


#include<bits/stdc++.h>
#include<string.h>
#include<math.h>
using namespace std;

void permuting(string s,int l,int r)
{
  int i;
  if(l==r)
  {
    cout<<s<<endl;
  }
  else
  {
    for(i=l;i<=r;i++)
    {
      swap(s[l],s[i]);
      permuting(s,l+1,r);
      swap(s[l],s[i]);
    }
  }
  
  
}

int main()
{
  string str="ssp";
  
  int n=str.size();
  cout<<n<<endl;
  
  permuting(str,0,n-1);
 
 
 
 
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////























////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////